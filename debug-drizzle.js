/**
 * Debug utility for Drizzle ORM queries
 */
import { drizzle } from 'drizzle-orm/postgres-js';
import postgres from 'postgres';
import * as schema from './shared/schema.js';
import { eq } from 'drizzle-orm';

// Set up Drizzle with debug logging
const queryClient = postgres(process.env.DATABASE_URL, { 
  max: 1,
  debug: true, // Enable query logging
});

const db = drizzle(queryClient, { schema });

async function debugDrizzleQueries() {
  try {
    console.log('DEBUG - Drizzle query test for user_products');
    console.log('\n1. Direct SQL query:');
    
    const userId = 3; // Gale's user ID
    
    // Raw SQL query using queryClient
    const sqlResult = await queryClient`
      SELECT * FROM user_products WHERE user_id = ${userId}
    `;
    
    console.log(`Raw SQL query found ${sqlResult.length} results:`, sqlResult);
    
    // Drizzle ORM query
    console.log('\n2. Drizzle ORM query:');
    const drizzleResult = await db.select().from(schema.userProducts)
      .where(eq(schema.userProducts.userId, userId));
    
    console.log(`Drizzle ORM query found ${drizzleResult.length} results:`, drizzleResult);
    
    // Print the SQL generated by Drizzle ORM (this will be shown in debug output)
    console.log('\n3. SQL query debug info:');
    console.log('Column definition for userId:', schema.userProducts.userId);
    
  } catch (error) {
    console.error('Error during debug:', error);
  } finally {
    // Close the connection
    await queryClient.end();
  }
}

debugDrizzleQueries();